{"version":3,"sources":["components/entry.js","components/tip.js","components/bill.js","App.js","serviceWorker.js","index.js"],"names":["Input","styled","input","props","value","Entry","useState","bill","setBill","className","type","name","placeholder","onChange","e","eval","count","handleInputChange","target","onClick","event","reset","Icon","span","edit","ThickSlider","withStyles","root","height","thumb","width","backgroundColor","border","marginTop","marginLeft","boxShadow","active","valueLabel","left","track","borderRadius","rail","Slider","Tip","chosen","setChosen","custom","setCustom","setEdit","handleClick","toggle","calculate","tips","map","t","index","key","parseFloat","isNaN","defaultValue","valueLabelDisplay","step","min","max","H1","h1","Toggle","Bill","setToggle","roundUp","setRoundUp","setCount","min-step","headcount","tip","bill_tip","tip_share","share","rounding","remainder","App","setState","round","bill_","count_","round_","state","percent","Math","abs","toFixed","toString","val","ceil","rm","this","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cf471a94.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst Input = styled.input`\r\n    text-align: ${props=>(props.value <1 ? 'center':'right')};\r\n`\r\nconst Entry = props => {\r\n    const[bill,setBill]=useState('');\r\n    \r\n    const handleInputChange = (input) => {\r\n        const value = input    \r\n        setBill(value)\r\n        props.eval(value,props.count,null)\r\n    }\r\n\r\n    const reset = event => {    \r\n        setBill('')\r\n        //setCount(1)\r\n        props.reset()\r\n    }\r\n\r\n    return(\r\n        <>        \r\n        <div className=\"entry-bar\"> \r\n            <div className=\"entry-field\">\r\n                <span className=\"money\">{bill!=='' && bill!==0 ? '$' : ''}</span>\r\n                <Input className=\"entry\" type=\"number\" name=\"bill\" placeholder=\"What's the damage?\" value={bill} onChange={(e) => handleInputChange(e.target.value)} />\r\n                <span className=\"edit reset hide\" onClick={reset}>X</span>\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Entry","//TODO: convert custom tip to slider\r\nimport React, {useState} from 'react';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport styled from 'styled-components';\r\n\r\nconst Icon = styled.span`\r\n  transform: ${props=>(props.edit===true ? 'rotate(0deg)' : 'rotate(135deg)')};\r\n`\r\n\r\n  const ThickSlider = withStyles({\r\n    root: {\r\n      height: 8,\r\n    },\r\n    thumb: {\r\n      height: 24,\r\n      width: 24,\r\n      backgroundColor: '#fff',\r\n      border: '2px solid currentColor',\r\n      marginTop: -8,\r\n      marginLeft: -12,\r\n      '&:focus,&:hover,&$active': {\r\n        boxShadow: 'inherit',\r\n      },\r\n    },active:{},    \r\n    valueLabel: {\r\n      left: 'calc(-50% + 4px)',\r\n    },\r\n    track: {\r\n      height: 8,\r\n      borderRadius: 4,\r\n    },\r\n    rail: {\r\n      height: 8,\r\n      borderRadius: 4,\r\n    },\r\n  })(Slider);\r\n\r\nconst Tip = (props) => {\r\n    const [chosen, setChosen] = useState(false)\r\n    const [custom,setCustom] = useState('custom')\r\n    const [edit,setEdit] = useState(false)\r\n\r\n    function handleClick(event){\r\n        const name = event.target.name\r\n        const value = event.target.value\r\n        chosen===name ? toggle(true,name,0) : toggle(false,name,value)   \r\n        setEdit(false)     \r\n    }\r\n    const toggle = (chosen,name,value) => {\r\n        if (chosen === true) {\r\n            setChosen(!name)\r\n            props.calculate(0)\r\n        } else {\r\n            setChosen(name)\r\n            props.calculate(value)\r\n        }\r\n    }\r\n    const handleInputChange = (event,input) => {\r\n        setCustom(input)\r\n    }\r\n    const handleSliderChange = (event,value) => {\r\n        setCustom(parseFloat(value))\r\n    }\r\n    const tips = props.tips\r\n    return(\r\n        <div className='tips'>\r\n            {tips.map((t,index)=>(            \r\n                <button onClick={handleClick} active={chosen===(t+'-'+index) ? 'true' : 'false'} className={(chosen===(t+'-'+index)) ? \"active\" : \"\"} name={t+'-'+index} key={t} value={parseFloat(t/100)}>{t}%</button>\r\n            ))}\r\n            <button onClick={custom==='Custom' ? null : handleClick} className={(chosen===(custom+'-4')) ? \"active\" : \"\"} name={custom+'-4'} value={isNaN(custom) ? 'custom' : parseFloat(custom/100)}>{custom>0 ? custom : 'custom'}%</button>\r\n            <Icon edit={edit} className={edit ? \"edit active\" : \"edit\"} onClick={()=>setEdit(edit => !edit)}>{edit ? '✔' : '✏'}</Icon>\r\n            {//<input type=\"number\" className={edit ? '' : 'hide'} name=\"btn-test\" onBlur={()=>setEdit(false)} onChange={(e) => handleInputChange(e.target.value)}></input>                       \r\n            }\r\n            <ThickSlider \r\n                defaultValue={25}\r\n                valueLabelDisplay=\"auto\"              \r\n                step={1}\r\n                min={0}\r\n                max={100}\r\n                name=\"btn-test\"\r\n                onChange={handleSliderChange}\r\n                className={edit ? 'slider' : 'slider hidden'}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Tip","//TODO: custom tip\r\n//TODO: dynamic show/hide total/each\r\nimport React, {useState} from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst H1 = styled.h1`\r\n    opacity: ${props=>(props.value==='0.00' ? '.5' : '1')};    \r\n`\r\n\r\nconst Toggle = styled.span`\r\n    background-color: ${props=>(props.toggle ? '#F34040' : '#FFBB36')};\r\n`\r\n\r\nconst Bill = (props) => {\r\n    const [toggle,setToggle] = useState(true)\r\n    const [roundUp,setRoundUp] = useState(false)    \r\n    const [count,setCount] = useState(1)\r\n    \r\n    const handleHeadcountChange = event => {\r\n        const value = event.target.value\r\n        setCount(value)\r\n        props.headcount(props.bill,value)\r\n    }\r\n    \r\n    const toggleRoundUp = () => {\r\n        setRoundUp(roundUp => !roundUp)  \r\n        props.rounding(!roundUp)\r\n    }\r\n\r\n    return(\r\n        <>        \r\n        <div className='bill'>\r\n            <div className=\"people\">\r\n                    <input className=\"\" type=\"number\" min=\"1\" min-step=\"1\" placeholder=\"1\" value={count} onChange={handleHeadcountChange} />\r\n                    <p>{count>1 ? 'people' : 'person'}</p>\r\n            </div>\r\n                <div className='bill-display'>\r\n                    {toggle ?        \r\n                        <div className='total'>\r\n                                <H1 className='tip' value={props.tip}>${props.tip} tip</H1>\r\n                                <H1 className='final' value={props.bill_tip}>${props.bill_tip}</H1>\r\n                        </div>\r\n                        :\r\n                        <div className='each'>\r\n                            <H1 className='tip' value={props.tip_share}>${props.tip_share} tip</H1>\r\n                            <H1 className='final' value={props.share}>${props.share}</H1>\r\n                        </div>            \r\n                    }\r\n                    <Toggle toggle={toggle} className={props.count>1 ? \"toggle\"  : \"toggle disabled\"} onClick={()=>setToggle(toggle => !toggle)}>{toggle ? 'Total' : 'Each'}</Toggle>\r\n                </div>\r\n                <div className='round small-container'>\r\n                <button className={roundUp ? 'active nearest' : 'nearest'} onClick={(toggleRoundUp)}>{roundUp ? '-' : '+' } ${props.remainder}</button>\r\n            </div>\r\n        </div>   \r\n        </>\r\n    );\r\n    }\r\n\r\nexport default Bill","import React, {Component} from 'react';\n\nimport Entry from './components/entry.js';\nimport Tip from './components/tip.js';\nimport Bill from './components/bill.js';\n//import './styles/App.css';\nimport './styles/main.css'\nimport './styles/styles.scss'\n\n\nconst tips = [10,15,18,20];\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      bill: '0.00',\n      bill_tip:'0.00',\n      share: '0.00',\n      tip: '0.00',\n      tip_share: '0.00',\n      count: 1,\n      percent: 0,\n      remainder: '0.00',\n      roundUp: false\n    }\n  }\n\n  headcount = (bill,count) =>{\n    this.setState({count:count})\n    this.eval(bill,count,null);\n  }\n  \n  rounding = (round) => {\n    this.setState({roundUp:round})  \n    this.eval(null,null,round);\n  }\n\n  roundUp(bill_tip){\n      let val=bill_tip;\n      val = Math.ceil(val);\n      return val;\n  }\n  remainder(bill_tip){\n    let val=bill_tip;\n    let rm = Math.ceil(val);\n    rm = bill_tip - rm;\n    return rm;\n}\n\n  //calc by input value\n  eval = (bill_,count_,round_) => {    \n    let bill,count,round;\n    bill_ !== null ? bill = bill_ : bill = this.state.bill;\n    count_ !== null ? count = count_ : count = this.state.count;    \n    round_ !== null ? round = round_ : round = this.state.roundUp;    \n    if(bill>0){\n      bill = parseFloat(bill);\n      let tip = parseFloat(this.state.tip);\n      let bill_tip = parseFloat(this.state.bill_tip);\n      let remainder = parseFloat(this.state.remainder);\n      try { \n        tip = bill*parseFloat(this.state.percent);\n        bill_tip = bill + tip;        \n        remainder = Math.abs(this.remainder(bill_tip));\n        if(round){\n          bill_tip = this.roundUp(bill_tip);\n          tip = bill_tip - bill;\n        }\n        let share = bill_tip/count;    \n        let tip_share = tip/count;\n        this.setState({ bill: bill.toFixed(2), bill_tip: bill_tip.toFixed(2), tip: tip.toFixed(2), tip_share: tip_share.toFixed(2),share: share.toFixed(2), remainder: remainder.toFixed(2)})    \n      }catch (e){\n        this.setState({\n        bill_tip:\"eval error\"\n      })\n      }\n    }\n  }\n\n  //calc by percent\n  calculate = (value) =>{    \n    let percent;\n    value>0 ? percent = parseFloat(value) : percent = 0\n    let bill = parseFloat(this.state.bill);\n    let tip = parseFloat(this.state.tip);\n    let bill_tip = parseFloat(this.state.bill);//this.state.bill_tip;      \n    let share = parseFloat(this.state.share);    \n    let remainder = parseFloat(this.state.remainder);\n    try {      \n      tip = bill*percent;\n      bill_tip = bill + tip;      \n      remainder = Math.abs(this.remainder(bill_tip));\n      if(this.state.roundUp){\n        bill_tip = this.roundUp(bill_tip);\n        tip = bill_tip - bill;\n      } \n      share = bill_tip / this.state.count;\n      let tip_share = tip/this.state.count;\n      this.setState({\n        bill_tip: bill_tip.toFixed(2).toString(), tip: tip.toFixed(2).toString(), tip_share: tip_share.toFixed(2), share: share.toFixed(2), percent: percent, remainder: remainder.toFixed(2)})\n    }catch (e){\n      this.setState({\n         bill_tip:\"calc error\"\n      })\n    }    \n  };  \n\n  reset = () =>{\n    this.setState({\n      bill: '0.00',\n      bill_tip:'0.00',\n      share: '0.00',\n      tip: '0.00',\n      tip_share: '0.00',\n      remainder: '0.00',\n      percent: 0\n    });\n  };  \n\n  render(){ \n    return (\n      <>\n      <div className=\"main\">\n        <div className=\"title\">\n          <h1>A Friendly Tip</h1>\n          <p>Tired of fighting with friends over who pays what, and how much tip to leave?\n            <br/><br/>Fight no longer!\n            <br/>…about that.</p>\n        </div>\n        <div className='container'>\n          <div className='controls'>\n          <Entry eval={this.eval} count={this.state.count} reset={this.reset} /> \n          <Tip tips={tips} calculate={this.calculate} reset={this.reset} />\n          </div>\n          <Bill headcount={this.headcount} count={this.state.count} bill={this.state.bill} bill_tip={this.state.bill_tip} tip={this.state.tip} tip_share={this.state.tip_share} share={this.state.share} rounding={this.rounding} remainder={this.state.remainder}/>\n        </div>\n      </div>\n      <div className=\"bottom\"><p>Created by Aaron Brunet 2020</p></div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}