{"version":3,"sources":["webpack:///./src/pages/projects.js"],"names":["ProjPage","projects","data","allMarkdownRemark","edges","className","map","project","key","node","id","frontmatter","title","date","excerpt","to","fields","slug","pageQuery"],"mappings":"6FAAA,kGAwBeA,UApBE,SAAC,GAAc,IACxBC,EADuB,EAAXC,KACIC,kBAAkBC,MACxC,OACE,kBAAC,IAAD,KACG,yBAAKC,UAAU,aACbJ,EAASK,KAAI,SAAAC,GAAO,OACnB,yBAAKC,IAAKD,EAAQE,KAAKC,GAAIL,UAAU,mBACnC,4BAAKE,EAAQE,KAAKE,YAAYC,OAC9B,2BAAIL,EAAQE,KAAKE,YAAYE,MAC7B,yBAAKR,UAAU,sBACb,2BAAIE,EAAQE,KAAKK,UAEnB,kBAAC,OAAD,CAAMC,GAAIR,EAAQE,KAAKO,OAAOC,MAA9B,oBAWL,IAAMC,EAAS","file":"component---src-pages-projects-js-651423b654c6afcbe126.js","sourcesContent":["import React from 'react';\r\nimport { Link, graphql } from 'gatsby';\r\nimport Layout from '../components/layout';\r\n\r\nconst ProjPage = ({ data }) => {\r\n  const projects = data.allMarkdownRemark.edges;\r\n  return (\r\n    <Layout>\r\n       <div className=\"post-list\">\r\n        {projects.map(project => (\r\n          <div key={project.node.id} className=\"post-list__item\">\r\n            <h2>{project.node.frontmatter.title}</h2>\r\n            <p>{project.node.frontmatter.date}</p>\r\n            <div className=\"post-list__excerpt\">\r\n              <p>{project.node.excerpt}</p>\r\n            </div>\r\n            <Link to={project.node.fields.slug}>Read More</Link>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default ProjPage;\r\n\r\n// Get all markdown data, in descending order by date, and grab the id, excerpt, slug, date, and title\r\nexport const pageQuery = graphql`\r\n  query {\r\n    allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date] }) {\r\n      edges {\r\n        node {\r\n          id\r\n          excerpt(pruneLength: 250)\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            date(formatString: \"MMMM DD, YYYY\")\r\n            title\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;"],"sourceRoot":""}